edges <- read.csv("../data/GOT-edges.csv")
head(edges)
nrow(edges)
nodes <- read.csv("../data/GOT-nodes.csv")
head(nodes)
nrow(nodes)
edges <- read.csv("../data/stormofswords.csv")
str(edges)
edges <- read.csv("../data/stormofswords.csv", stringsAsFactors=F)
str(edges)
library(igraph)
edges <- read.csv("../data/GOT-edges.csv", stringsAsFactors=F)
g <- graph_from_data_frame(d=edges, directed=FALSE)
g
plot(g)
sort(degree(g))
tail(sort(degree(g, mode="in"))) # number of times retweeted
tail(sort(degree(g, mode="out"))) # number of times retweeting
sort(degree(g))
tail(sort(degree(g, mode="in")))
tail(sort(degree(g, mode="out")))
head(sort(closeness(g, normalized=TRUE)))
head(sort(closeness(g)))
sort(closeness(g)
)
tail(sort(closeness(g, normalized=TRUE)))
head(sort(closeness(g, normalized=TRUE)))
tail(sort(betweenness(g)))
?closeness
g <- make_ring(10)
g2 <- make_star(10)
closeness(g)
closeness(g2, mode="in")
edge_density(g)
reciprocity(g)
transitivity(g)
g
library(igraph)
edges <- read.csv("../data/GOT-edges.csv", stringsAsFactors=F)
g <- graph_from_data_frame(d=edges, directed=FALSE)
transitivity(g)
reciprocity(g)
edge_density(g)
components(g)
comm <- cluster_infomap(g)
comm
comm[[1]]
comm[[2]]
comm[[3]]
comm[[7]]
comm[[6]]
comm[[5]]
comm[[4]]
coreness(g)
table(coreness(g))
which(coreness(g)==7) # what is the core of the network?
which(coreness(g)==6)
plot(g[coreness(g)==7])
?subgraph.edges
core <- subgraph(g, v=which(coreness(g)==7))
core <- induced_subgraph(g, v=which(coreness(g)==7))
core
plot(core)
